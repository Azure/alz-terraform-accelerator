---
parameters:
  - name: terraform_action
    default: 'apply'

steps:
  - template: terraform-installer.yaml
    parameters:
      terraformVersion: 'latest'
      scriptPath: $(Build.SourcesDirectory)/${repository_name_templates}
  - task: TerraformTaskV4@4
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: '${service_connection_name_plan}'
      backendAzureRmResourceGroupName: '$(BACKEND_AZURE_RESOURCE_GROUP_NAME)'
      backendAzureRmStorageAccountName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME)'
      backendAzureRmContainerName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME)'
      backendAzureRmKey: 'terraform.tfstate'
    env:
      ARM_USE_AZUREAD: true
  - task: TerraformTaskV4@4
    displayName: Terraform Plan for $${{ coalesce(parameters.terraform_action, 'Apply') }}
    inputs:
      provider: 'azurerm'
      command: 'plan'
      $${{ if eq(coalesce(parameters.terraform_action, 'apply'), 'apply') }}:
        commandOptions: '-out=tfplan -input=false'
      $${{ if eq(coalesce(parameters.terraform_action, 'apply'), 'destroy') }}:
        commandOptions: "-out=tfplan -input=false -destroy"
      environmentServiceNameAzureRM: '${service_connection_name_plan}'
    env:
      ARM_USE_AZUREAD: true
