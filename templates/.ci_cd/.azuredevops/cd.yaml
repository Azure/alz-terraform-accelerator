trigger: 
- main

lockBehavior: sequential
stages:  
- stage: plan
  displayName: Plan and Apply
  variables:
    - group: ${variable_group_name}
  jobs:
    - deployment: planandapply
      displayName: Plan with Terraform
      pool: 
        ${agent_pool_configuration}
      environment: ${environment_name_plan}
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              displayName: Checkout Terraform Module
            - task: TerraformInstaller@0
              displayName: Install Terraform
              inputs:
                terraformVersion: 'latest'
            - task: TerraformTaskV4@4
              displayName: Terraform Init
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: '${service_connection_name}'
                backendAzureRmResourceGroupName: '$(BACKEND_AZURE_RESOURCE_GROUP_NAME)'
                backendAzureRmStorageAccountName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME)'
                backendAzureRmContainerName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME)'
                backendAzureRmKey: 'terraform.tfstate'
              env:
                ARM_USE_AZUREAD: true
            - task: TerraformTaskV4@4
              displayName: Terraform Plan
              inputs:
                provider: 'azurerm'
                command: 'plan'
                commandOptions: '-out tfplan'
                environmentServiceNameAzureRM: '${service_connection_name}'
              env:
                ARM_USE_AZUREAD: true
    - deployment: apply
      dependsOn: plan
      displayName: Apply with Terraform
      pool: 
        ${agent_pool_configuration}
      environment: ${environment_name_apply}
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              displayName: Checkout Terraform Module
            - task: TerraformInstaller@0
              displayName: Install Terraform
              inputs:
                terraformVersion: 'latest'
            - task: TerraformTaskV4@4
              displayName: Terraform Init
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: '${service_connection_name}'
                backendAzureRmResourceGroupName: '$(BACKEND_AZURE_RESOURCE_GROUP_NAME)'
                backendAzureRmStorageAccountName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_NAME)'
                backendAzureRmContainerName: '$(BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME)'
                backendAzureRmKey: 'terraform.tfstate'
              env:
                ARM_USE_AZUREAD: true
            - task: TerraformTaskV4@4
              displayName: Terraform Apply
              inputs:
                provider: 'azurerm'
                command: 'apply'
                commandOptions: '-auto-approve'
                environmentServiceNameAzureRM: '${service_connection_name}'
              env:
                ARM_USE_AZUREAD: true