---
name: Azure Landing Zone Continuous Delivery
on:
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: Plan with Terraform
    concurrency: ${environment_name_plan}
    environment: ${environment_name_plan}
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: "$${{ vars.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "$${{ vars.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "$${{ vars.AZURE_TENANT_ID }}"
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.5.0

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="resource_group_name=$${{vars.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
          -backend-config="storage_account_name=$${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
          -backend-config="container_name=$${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
          -backend-config="key=terraform.tfstate"

      - name: Terraform Plan for $${{ github.event.inputs.terraform_action }}
        run: "terraform plan -out=tfplan -input=false $${{ github.event.inputs.terraform_action == 'destroy' && '-destroy' || '' }}"

      - name: Create Module Artifact
        run: |
          New-Item -Path . -Name "staging" -ItemType "directory"
          Copy-Item -Path "./*.tf" -Destination "./staging"
          Copy-Item -Path "./*.tfvars" -Destination "./staging"
          Copy-Item -Path "./tfplan" -Destination "./staging"
        shell: pwsh

      - name: Publish Module Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: module
          path: ./staging/

      - name: Show the Plan for Review
        run: terraform show tfplan

  apply:
    needs: plan
    name: Apply with Terraform
    concurrency: ${environment_name_apply}
    environment: ${environment_name_apply}
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: "$${{ vars.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "$${{ vars.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "$${{ vars.AZURE_TENANT_ID }}"
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: module

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="resource_group_name=$${{vars.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
          -backend-config="storage_account_name=$${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
          -backend-config="container_name=$${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
          -backend-config="key=terraform.tfstate"

      - name: Terraform $${{ github.event.inputs.terraform_action }}
        run: terraform apply -input=false -auto-approve tfplan
